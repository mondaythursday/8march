@page "/stickers"

@using WebPictureApplication.Models;
@using WebPictureApplication.Pages;
@using WebPictureApplication.Shared;


@inject NavigationManager NavigationManager;

<style>
    .layout {
        height: 90%;
        position: sticky;
        display: block;
    }
    .WhiteText
    {
        color:white;
    }
</style>

@code {
    [CascadingParameter(Name = "BaseApiUrl")] protected string BaseApiUrl { get; set; }

    List<LongText> Infos = new List<LongText>();
    List<TextBlock> Blocks = new List<TextBlock>();
    string up = "";

    int height = 26;
    int width = 14;

    int vertical = 3;
    int horizontal = 4;

    protected override void OnInitialized()
    {
        LongText[] infos = JsonGetter.GetStickers(@"wwwroot\Data\StickersData.json");

        for (int i = 0; i < infos.Length; i++)
        {
            Blocks.Add(new TextBlock
            {
                Id = i,
                Text = infos[i].ShortText,
                PlaceId = 0,
                FullText = new string[] { infos[i].Text},
                InnerClassInfo = "zero"
            });
        }
    }

    void HandleStatusUpdated(TextBlock updated)
    {
        up = updated.Text;
    }

    bool showModal = false;
    string path;


    private void Download(int[] ids)
    {
        string path = String.Join('-', ids);
        NavigationManager.NavigateTo($"{BaseApiUrl}/download/stickers/{path}", true);
    }

    private bool CheckAllPlaces (int num)
    {
        for (int i = 1; i<=num; i++)
        {
            if (!(Blocks.Any(x => x.PlaceId == i)))
            {
                return false;
            }
        }
        return true;
    }

    private int[] MakeIdsArr (int num)
    {
        List<int> infos = new List<int>();
        infos = new List<int>();
        for (int i = 1; i <= num; i++)
        {
            infos.Add(Blocks.SingleOrDefault(x => x.PlaceId == i).Id);
        }
        return infos.ToArray();
    }


    void ModalShow()
    {
        if (CheckAllPlaces(12))
        {

            Download(MakeIdsArr(12));
        }
        else
        {
            showModal = true;
        }
    }
    void ModalCancel() => showModal = false;
    void ModalOk()
    {
        Console.WriteLine("Modal ok");
        showModal = false;
    }
}

<h3>Обертка для конфет</h3>
<div class ="sticker"style=" color: white;">
    <DragNDropContainer OnStatusUpdated="HandleStatusUpdated" Blocks="Blocks" AllowCopy="true">
        <PlaceComponent HeightPercent="5"
                        WidthPercent="80"
                        Id="0"
                        DesignInfoClass="DesignClass.TopCardPicker" />


        <TableComponent Path="../PrintLayouts/stickers.jpg"
                        TableWidth="94"
                        TableHeight="100"
                        TopPosition="0"
                        LeftPosition="3"
                        PlaceWidth="100"
                        PlaceHeight="25"
                        Horizontal="@horizontal"
                        Vertical="@vertical"
                        Opacity="100" />

        <div style=" background-color: transparent; display: inline-flex; justify-content: center; height: 5vh; width: 100%; align-items: center">
            <button type="button"
                    class="btn btn-prime"
                    style="background-color: rgb(100, 176, 112)"
                    @onclick="@ModalShow">
                Скачать макет
            </button>
        </div>

    </DragNDropContainer>
</div>
@if (showModal)
{
    <div class="modal fade show" id="myModal" style="display:block" aria-modal="true" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
                </div>
                    <div class="modal-body">
                        Заполните все ячейки
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn" @onclick="@ModalCancel">Cancel</button>
                    </div>
            </div>
        </div>
    </div>
}
<hr />



